// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockMetrics is an autogenerated mock type for the Metrics type
type MockMetrics struct {
	mock.Mock
}

type MockMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetrics) EXPECT() *MockMetrics_Expecter {
	return &MockMetrics_Expecter{mock: &_m.Mock}
}

// IncHTTPRequestsTotal provides a mock function with given fields: method, path, status
func (_m *MockMetrics) IncHTTPRequestsTotal(method string, path string, status int) {
	_m.Called(method, path, status)
}

// MockMetrics_IncHTTPRequestsTotal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncHTTPRequestsTotal'
type MockMetrics_IncHTTPRequestsTotal_Call struct {
	*mock.Call
}

// IncHTTPRequestsTotal is a helper method to define mock.On call
//   - method string
//   - path string
//   - status int
func (_e *MockMetrics_Expecter) IncHTTPRequestsTotal(method interface{}, path interface{}, status interface{}) *MockMetrics_IncHTTPRequestsTotal_Call {
	return &MockMetrics_IncHTTPRequestsTotal_Call{Call: _e.mock.On("IncHTTPRequestsTotal", method, path, status)}
}

func (_c *MockMetrics_IncHTTPRequestsTotal_Call) Run(run func(method string, path string, status int)) *MockMetrics_IncHTTPRequestsTotal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(int))
	})
	return _c
}

func (_c *MockMetrics_IncHTTPRequestsTotal_Call) Return() *MockMetrics_IncHTTPRequestsTotal_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncHTTPRequestsTotal_Call) RunAndReturn(run func(string, string, int)) *MockMetrics_IncHTTPRequestsTotal_Call {
	_c.Run(run)
	return _c
}

// ObserveHTTPRequestsDurationSeconds provides a mock function with given fields: method, path, seconds
func (_m *MockMetrics) ObserveHTTPRequestsDurationSeconds(method string, path string, seconds float64) {
	_m.Called(method, path, seconds)
}

// MockMetrics_ObserveHTTPRequestsDurationSeconds_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveHTTPRequestsDurationSeconds'
type MockMetrics_ObserveHTTPRequestsDurationSeconds_Call struct {
	*mock.Call
}

// ObserveHTTPRequestsDurationSeconds is a helper method to define mock.On call
//   - method string
//   - path string
//   - seconds float64
func (_e *MockMetrics_Expecter) ObserveHTTPRequestsDurationSeconds(method interface{}, path interface{}, seconds interface{}) *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call {
	return &MockMetrics_ObserveHTTPRequestsDurationSeconds_Call{Call: _e.mock.On("ObserveHTTPRequestsDurationSeconds", method, path, seconds)}
}

func (_c *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call) Run(run func(method string, path string, seconds float64)) *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(float64))
	})
	return _c
}

func (_c *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call) Return() *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call) RunAndReturn(run func(string, string, float64)) *MockMetrics_ObserveHTTPRequestsDurationSeconds_Call {
	_c.Run(run)
	return _c
}

// NewMockMetrics creates a new instance of MockMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetrics {
	mock := &MockMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
